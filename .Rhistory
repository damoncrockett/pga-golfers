text = element_text(face='plain', color='white', size = 15))
ggplot(nyc,aes(hue)) + geom_histogram() +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(nyc,aes(hue)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(nyc,aes(hue)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='NYC HUE')
ggplot(nyc,aes(sat)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='NYC HUE')
ggplot(nyc,aes(sat)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='NYC SAT')
ggplot(nyc,aes(val)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='NYC VAL')
ggplot(la,aes(val)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='LA VAL')
ggplot(la,aes(sat)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='LA SAT')
ggplot(la,aes(hue)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='LA HUE')
rep(c('Fall','Winter','Spring'), times=7)
rep(c('09','10','11','12','13'), each=3)
d = data.frame(term=rep(c('Fall','Winter','Spring'), times=7),
year=c('08',rep(c('09','10','11','12','13'), each=3),'14','14'),
program_year = rep(c(1:7),each=3))
d = data.frame(term=rep(c('Fall','Winter','Spring'), times=7),
year=c('08',rep(c('09','10','11','12','13','14'), each=3),'15','15'),
program_year = rep(c(1:7),each=3))
d
d$gpa = c(3.5,3.85,4,4,4,3.7,4,4,NA,4,4,NA,NA,4,NA,NA,NA,NA,NA,NA,4)
f = read.csv('/Users/damoncrockett/Desktop/US_HSV_modes_top60_cities_urban-areas.csv')
str(f)
f = f[c("lat","lon","urban_areas")]
rev(sort(table(f$urban_areas)))
la = subset(f,f$urban_areas == "Los Angeles--Long Beach--Anaheim, CA")
nyc = subset(f,f$urban_areas == "New York--Newark, NY--NJ--CT")
chi = subset(f,f$urban_areas == "Chicago, IL--IN")
dallas = subset(f,f$urban_areas == "Dallas--Fort Worth--Arlington, TX")
dc = subset(f,f$urban_areas == "Washington, DC--VA--MD")
houston = subset(f,f$urban_areas == "Houston, TX")
sd = subset(f,f$urban_areas == "San Diego, CA")
sf = subset(f,f$urban_areas == "San Francisco--Oakland, CA")
austin = subset(f,f$urban_areas == "Austin, TX")
sa = subset(f,f$urban_areas == "San Antonio, TX")
vegas = subset(f,f$urban_areas == "Las Vegas--Henderson, NV")
phoenix = subset(f,f$urban_areas == "Phoenix--Mesa, AZ")
center_la = c(lon=-118.2500, lat=34.0500)
library(ggmap)
center_la = c(lon=-118.2500, lat=34.0500)
center_nyc = c(lon=-74.0059, lat=40.7127)
center_chi = c(lon=-87.6847, lat=41.8369)
center_dallas = c(lon=-96.7970, lat=32.7767)
center_dc = c(lon=-77.0164, lat=38.9047)
center_houston = c(lon=-95.3698, lat=29.7604)
center_sd = c(lon=-117.1625, lat=32.7150)
center_sf = c(lon=-122.4167, lat=37.7833)
center_austin = c(lon=-97.7500, lat=30.2500)
center_sa = c(lon=-98.5000, lat=29.4167)
center_vegas = c(lon=-115.1739, lat=36.1215)
center_phoenix = c(lon=-112.0667, lat=33.4500)
la_map = get_map(location = center_la,
source = "osm",
zoom = 14,
color = "bw")
nyc_map = get_map(location = center_nyc,
source = "osm",
zoom = 14,
color = "bw")
chi_map = get_map(location = center_chi,
source = "osm",
zoom = 14,
color = "bw")
dallas_map = get_map(location = center_dallas,
source = "osm",
zoom = 14,
color = "bw")
dc_map = get_map(location = center_dc,
source = "osm",
zoom = 14,
color = "bw")
houston_map = get_map(location = center_houston,
source = "osm",
zoom = 14,
color = "bw")
sd_map = get_map(location = center_sd,
source = "osm",
zoom = 14,
color = "bw")
sf_map = get_map(location = center_sf,
source = "osm",
zoom = 14,
color = "bw")
austin_map = get_map(location = center_austin,
source = "osm",
zoom = 14,
color = "bw")
sa_map = get_map(location = center_sa,
source = "osm",
zoom = 14,
color = "bw")
vegas_map = get_map(location = center_vegas,
source = "osm",
zoom = 14,
color = "bw")
phoenix_map = get_map(location = center_phoenix,
source = "osm",
zoom = 14,
color = "bw")
ggmap(la_map) +
geom_point(data = la, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(nyc_map) +
geom_point(data = nyc, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(chi_map) +
geom_point(data = chi, aes(x = lon, y = lat),
size = 1,
color = "blue")
la_map = get_map(location = center_la,
source = "osm",
zoom = 10,
color = "bw")
nyc_map = get_map(location = center_nyc,
source = "osm",
zoom = 10,
color = "bw")
chi_map = get_map(location = center_chi,
source = "osm",
zoom = 10,
color = "bw")
dallas_map = get_map(location = center_dallas,
source = "osm",
zoom = 10,
color = "bw")
dc_map = get_map(location = center_dc,
source = "osm",
zoom = 10,
color = "bw")
houston_map = get_map(location = center_houston,
source = "osm",
zoom = 10,
color = "bw")
sd_map = get_map(location = center_sd,
source = "osm",
zoom = 10,
color = "bw")
sf_map = get_map(location = center_sf,
source = "osm",
zoom = 10,
color = "bw")
austin_map = get_map(location = center_austin,
source = "osm",
zoom = 10,
color = "bw")
sa_map = get_map(location = center_sa,
source = "osm",
zoom = 10,
color = "bw")
vegas_map = get_map(location = center_vegas,
source = "osm",
zoom = 10,
color = "bw")
phoenix_map = get_map(location = center_phoenix,
source = "osm",
zoom = 10,
color = "bw")
ggmap(la_map) +
geom_point(data = la, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(nyc_map) +
geom_point(data = nyc, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(chi_map) +
geom_point(data = chi, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(dallas_map) +
geom_point(data = dallas, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(dc_map) +
geom_point(data = dc, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(sd_map) +
geom_point(data = sd, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(sf_map) +
geom_point(data = sf, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(austin_map) +
geom_point(data = la, aes(x = lon, y = lat),
size = 1,
color = "blue")
austin_map = get_map(location = center_austin,
source = "osm",
zoom = 4,
color = "bw")
head(austin$lon,200)
head(austin$lat,200)
ggmap(austin_map) +
geom_point(data = austin, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(sa_map) +
geom_point(data = sa, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(vegas_map) +
geom_point(data = vegas, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(phoenix_map) +
geom_point(data = phoenix, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggplot(la,aes(lon)) + geom_histogram(color="blue",fill="grey50") +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(color='white', size = 10)) +
labs(x='LONGITUDE',y='COUNT')
ggplot(la,aes(lon)) + geom_histogram(color="blue",fill="grey50") +
theme(panel.background = element_rect(fill = "grey50"),
panel.grid.major = element_line(color = "grey50"),
panel.grid.minor = element_line(color = "grey50"),
plot.background = element_rect(fill = "grey50"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(color='white', size = 10)) +
labs(x='LONGITUDE',y='COUNT')
ggplot(la,aes(lon)) + geom_histogram(color="white",fill="grey50") +
theme(panel.background = element_rect(fill = "grey50"),
panel.grid.major = element_line(color = "grey50"),
panel.grid.minor = element_line(color = "grey50"),
plot.background = element_rect(fill = "grey50"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(color='white', size = 10)) +
labs(x='LONGITUDE',y='COUNT')
ggplot(la,aes(lon)) + geom_histogram(color="white",fill="grey50") +
theme(panel.background = element_rect(fill = "grey50"),
panel.grid.major = element_line(color = "grey50"),
panel.grid.minor = element_line(color = "grey50"),
plot.background = element_rect(fill = "grey50"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(color='white', size = 10)) +
labs(x='LONGITUDE',y='COUNT',title="LA")
lats = seq(from = 32.8522562177,
to = 32.8707305527,
by = 0.0000000001)
lons = seq(from = -117.267083726,
to = -117.24521069,
by = 0.0000000001)
df = data.frame(lat = sample(lats,2048,replace=T),
lon = sample(lons,2048,replace=T))
write.csv(df,'random_geo_lj_2.csv')
pwd
printwd()
pwd()
(364/365)*(364/365)
(364/365)^3
(364/365)^10
(364/365)^30
van_gogh_genres <- read.delim("~/Downloads/van_gogh_genres.txt", header=FALSE)
View(van_gogh_genres)
xx =van_gogh_genres
tablE(xx$Label_Place)
table(xx$Label_Place)
table(xx$V14)
table(xx$V11)
table(xx$V12)
library(ggmap)
mymap = map_data(’state’) # need to add variable to plot
mymap = map_data('state') # need to add variable to plot
p0 = ggplot(map_data, aes(x=x, y=y, group=z)) +
geom_polygon(aes(fill = cut_number(z, 5))) +
geom_path(colour = 'gray', linestyle = 2) +
scale_fill_brewer(palette = 'PuRd') +
coord_map();
?geom_path
p0 = ggplot(map_data, aes(x=x, y=y, group=z)) +
geom_polygon(aes(fill = cut_number(z, 5))) +
geom_path(colour = 'gray', linetype = 2) +
scale_fill_brewer(palette = 'PuRd') +
coord_map();
plot(p0)
ggplot(map_data, aes(x=x, y=y, group=z)) +
geom_polygon(aes(fill = cut_number(z, 5))) +
geom_path(colour = 'gray', linetype = 2) +
scale_fill_brewer(palette = 'PuRd') +
coord_map()
map_data
mymap
str(my_map)
str(mymap)
?cut_number
?map_data
map_data("state")
ggplot(mymap, aes(x=x, y=y, group=z)) +
geom_polygon(aes(fill = cut_number(z, 5))) +
geom_path(colour = 'gray', linetype = 2) +
scale_fill_brewer(palette = 'PuRd') +
coord_map()
mymap
head(mymap)
library(ggplot2)
library(plyr)
library(maptools)
library(rgeos)
install.packages("maptools")
library(ggplot2)
#----------
# prelim
#----------
df = read.csv("astro_tag_exif_autotags_clean_quality_datetimes.csv")
df$shutter = NULL
df = df[!is.na(df$size),]
the.rest = c("PENTAX","KODAK","SBIG","APPLE","SAMSUNG","MINOLTA",
"LEICA","HP","ERICSSON","SIGMA","GE","CASIO","RICOH","BENQ")
maker = as.character(df$make)
for (i in 1:3856) {
if (maker[i] %in% the.rest) {
maker[i] = "MINOR"
}
}
df$maker = factor(maker)
df$ISO = as.numeric(as.character(df$ISO))
df$aperture = as.numeric(as.character(df$aperture))
df$modelyear = as.factor(df$modelyear)
df$year = as.factor(df$year)
df$hour = as.factor(df$hour)
df$isoweekday = as.factor(df$isoweekday)
df$month = as.factor(df$month)
#----------
# tradhist
#----------
DIR = "/Users/damoncrockett/Desktop/astrophotography_data/glutplot/"
numeric.vars = c("ISO","aperture","focal","count","size","emp","secpast")
cat.vars = c("modelyear","type","stype","year","month","isoweekday","hour","maker")
for (numeric.var in numeric.vars) {
ggplot(df,aes_string(numeric.var)) + geom_histogram()
ggsave(paste(DIR,numeric.var,".png",sep=""),width=8,height=4,units="in")
}
for (cat.var in cat.vars) {
ggplot(df,aes_string(cat.var)) + geom_bar()
ggsave(paste(DIR,cat.var,".png",sep=""),width=8,height=4,units="in")
}
for (numeric.var in numeric.vars) {
ggplot(df,aes_string(numeric.var)) + geom_histogram()
ggsave(paste(DIR,numeric.var,".png",sep=""),width=8,height=4,units="in")
}
for (cat.var in cat.vars) {
ggplot(df,aes_string(cat.var)) + geom_bar()
ggsave(paste(DIR,cat.var,".png",sep=""),width=8,height=4,units="in")
}
s = "person,female,belladonna"
strsplit(s)
?strsplit
strsplit(s,",")
source('~/.active-rstudio-document', echo=TRUE)
log(5)
5/0
log(5/0)
log(0)
log(0)+log(0)
0*log(0/0)
0/0
log(1/0)
1/0
setwd("~/pga-golfers/")
df = read.csv("clean.csv")
library(ggplot2)
df = ggplot(df,aes(height,years)) + geom_point()
df = read.csv("clean.csv")
ggplot(df,aes(height,years)) + geom_point()
ggplot(df,
aes(as.factor(height),
as.factor(years))) +
geom_point()
ggplot(df,aes(as.factor(height),years))) + geom_point()
ggplot(df,aes(as.factor(height),years)) + geom_point()
ggplot(df,aes(height,years)) + geom_point()
ggplot(df,aes(height,years)) + geom_point() + stat_smooth()
cor.test(df$height,df$years)
ggplot(df,aes(height,years)) + geom_point()
table(df$height)
length(table(df$height))
ggplot(df,aes(height)) + geom_histogram(bins=length(table(df$height)))
ggplot(df,aes(height)) +
geom_histogram(bins=length(table(df$height)),
color="black",
fill="white")
ggplot(subset(df,!is.na(df$height)),
aes(as.factor(height))) +
geom_histogram(bins=length(table(df$height)),
color="black",
fill="white")
ggplot(subset(df,!is.na(df$height)),
aes(as.factor(height))) +
geom_histogram(bins=length(table(df$height)),
color="black",
fill="white",
stat="count")
ggplot(df,aes(height)) +
geom_histogram(bins=length(table(df$height)),
color="black",
fill="white")
ggplot(df,aes(years)) +
geom_histogram(bins=30),
color="black",
fill="white")
ggplot(df,aes(years)) +
geom_histogram(bins=30,
color="black",
fill="white")
min(df$years)
?min
min(df$years,na.rm=TRUE)
max(df$years,na.rm=TRUE)
max(df$years,na.rm=TRUE) - min(df$years,na.rm=TRUE)
?round
age.range = ceiling(max(df$years,na.rm=TRUE) - min(df$years,na.rm=TRUE))
ggplot(df,aes(years)) +
geom_histogram(bins=age.range,
color="black",
fill="white")
str(df)
median(df$height)
median(df$height,na.rm=TRUE)
mean(df$height,na.rm=TRUE)
mode(df$height,na.rm=TRUE)
mode(df$height)
ggplot(df,aes(height,years)) + geom_point()
ggplot(df,aes(height,weight)) + geom_point()
weight.subset = subset(df,df$weight < 600 & df$weight > 100)
ggplot(weight.subset,aes(height,years)) + geom_point()
ggplot(weight.subset,aes(height,weight)) + geom_point()
cor.test(weight.subset$height,weight.subset$weight)
ggplot(weight.subset,aes(weight,years)) + geom_point()
ggplot(weight.subset,aes(years,weight)) + geom_point()
cor.test(weight.subset$years,weight.subset$weight)
